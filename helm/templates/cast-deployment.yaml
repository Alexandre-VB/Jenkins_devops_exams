apiVersion: apps/v1
kind: Deployment
metadata:
  name: cast-deployment
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.cast.replicaCount }}
  selector:
    matchLabels:
      app: cast-service
  template:
    metadata:
      labels:
        app: cast-service
    spec:
      initContainers: 
        - name: wait-for-db
          image: postgres:12.1-alpine
          command: ['sh', '-c', 'until pg_isready -h cast-db -p 5432 -U $(POSTGRES_USER); do echo waiting for postgres; sleep 2; done;']
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: cast-postgres-secret
                  key: POSTGRES_USER
      containers:
        - name: cast-service
          image: "{{ .Values.cast.image.repository }}:{{ .Values.cast.image.tag }}"
          command: ["uvicorn", "app.main:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]
          ports:
            - containerPort: 8000
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: cast-postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: cast-postgres-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: cast-postgres-secret
                  key: POSTGRES_DB
            - name: DATABASE_URI
              value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@cast-db:5432/$(POSTGRES_DB)"

